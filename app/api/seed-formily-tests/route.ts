import { NextResponse } from 'next/server'
import { supabaseAdmin } from '@/lib/supabase-server'
import { REGION_NAMES } from '@/lib/digital-skills-calculator'

export async function POST() {
  try {
    // ========== ICT INDEX TEST ==========
    const buildICTIndexSchema = () => {
      const properties: Record<string, any> = {
        intro: {
          type: 'void',
          'x-component': 'FormItem',
          'x-content':
            'üìä –¢–µ—Å—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤\n\n–û—Ç–º–µ—Ç—å—Ç–µ –≤—Å–µ –Ω–∞–≤—ã–∫–∏, –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã –æ–±–ª–∞–¥–∞–µ—Ç–µ.',
        },
      }

      // 15 —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏
      const skills = [
        '–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ, –≤—Å—Ç–∞–≤–∫–∞ –∏–ª–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞, —Ñ–æ—Ç–æ-, –≤–∏–¥–µ–æ-, –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤',
        '–ù–∞–±–æ—Ä —Ç–µ–∫—Å—Ç–∞ –∏ –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
        '–†–∞–±–æ—Ç–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏',
        '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ-, –≤–∏–¥–µ–æ- –∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤',
        '–°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π',
        '–û—Ç–ø—Ä–∞–≤–∫–∞ SMS, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã, —á–µ—Ä–µ–∑ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã',
        '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤',
        '–ü–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–æ–≤ –º–µ–∂–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏, –æ–±–ª–∞—á–Ω—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞',
        '–ü–æ–∏—Å–∫, –∑–∞–≥—Ä—É–∑–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è',
        '–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π –¥–ª—è —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π, –∑–∞—â–∏—Ç–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞',
        '–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç–µ',
        '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
        '–ù–∞–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è',
        '–ò–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏',
        '–ü—Ä–æ—á–∏–µ –¥–µ–π—Å—Ç–≤–∏—è',
      ]

      // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –Ω–∞–≤—ã–∫ –∫–∞–∫ —á–µ–∫–±–æ–∫—Å
      for (let i = 1; i <= 15; i++) {
        properties[`skill_${i}`] = {
          type: 'string',
          title: `${i}. ${skills[i - 1]}`,
          'x-decorator': 'FormItem',
          'x-component': 'Checkbox',
          'x-component-props': {},
          enum: ['yes'],
          'x-meta': {
            skill: `skill_${i}`,
            skillType: 'digital',
          },
        }
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞
      const regionOptions = Object.entries(REGION_NAMES).map(([key, name]) => ({
        label: name,
        value: key,
      }))

      properties['region'] = {
        type: 'string',
        title: '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ä–µ–≥–∏–æ–Ω –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è',
        'x-decorator': 'FormItem',
        'x-component': 'Select',
        'x-component-props': {
          placeholder: '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω',
          showSearch: true,
          filterOption: true,
        },
        enum: regionOptions.map((r) => r.value),
        'x-enum-options': regionOptions,
        required: true,
      }

      return {
        type: 'object',
        properties,
        'x-meta': {
          testType: 'ict_index',
          scoringMode: 'custom',
        },
      }
    }

    // ========== EMPLOYMENT SCORING TEST ==========
    const buildEmploymentScoringSchema = () => {
      const properties: Record<string, any> = {
        intro: {
          type: 'void',
          'x-component': 'FormItem',
          'x-content':
            'üíº –¢–µ—Å—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\n\n–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –≤–∞—à–µ–º —Å–æ—Ü–∏–∞–ª—å–Ω–æ-–¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø—Ä–æ—Ñ–∏–ª–µ.',
        },
      }

      // –í–æ–ø—Ä–æ—Å 1: –ü–æ–ª
      properties['gender'] = {
        type: 'string',
        title: '1. –ö–∞–∫–æ–≤ –≤–∞—à –ø–æ–ª?',
        'x-decorator': 'FormItem',
        'x-component': 'Radio.Group',
        enum: ['male', 'female'],
        'x-enum-options': [
          { label: '–ú—É–∂—Å–∫–æ–π', value: 'male' },
          { label: '–ñ–µ–Ω—Å–∫–∏–π', value: 'female' },
        ],
        required: true,
        'x-meta': { factor: 'gender' },
      }

      // –í–æ–ø—Ä–æ—Å 2: –¢–∏–ø –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞
      properties['settlement_type'] = {
        type: 'string',
        title: '2. –í –∫–∞–∫–æ–º —Ç–∏–ø–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –≤—ã –ø—Ä–æ–∂–∏–≤–∞–µ—Ç–µ?',
        'x-decorator': 'FormItem',
        'x-component': 'Radio.Group',
        enum: ['city', 'village'],
        'x-enum-options': [
          { label: '–ì–æ—Ä–æ–¥', value: 'city' },
          { label: '–°–µ–ª–æ –∏ –ø–æ–¥–æ–±–Ω—ã–µ', value: 'village' },
        ],
        required: true,
        'x-meta': { factor: 'settlement_type' },
      }

      // –í–æ–ø—Ä–æ—Å 3: –†–µ–≥–∏–æ–Ω (–≤—Å–µ 85 —Ä–µ–≥–∏–æ–Ω–æ–≤)
      const employmentRegions = Object.entries(REGION_NAMES).map(([key, name]) => ({
        label: name,
        value: key,
      }))

      properties['region'] = {
        type: 'string',
        title: '3. –í –∫–∞–∫–æ–º —Ä–µ–≥–∏–æ–Ω–µ –≤—ã –ø—Ä–æ–∂–∏–≤–∞–µ—Ç–µ?',
        'x-decorator': 'FormItem',
        'x-component': 'Select',
        'x-component-props': {
          placeholder: '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω',
          showSearch: true,
          filterOption: true,
        },
        enum: employmentRegions.map((r) => r.value),
        'x-enum-options': employmentRegions,
        required: true,
        'x-meta': { factor: 'region' },
      }

      // –í–æ–ø—Ä–æ—Å 4: –†–∞–∑–º–µ—Ä —Å–µ–º—å–∏
      const familySizeOptions = Array.from({ length: 13 }, (_, i) => ({
        label: `${i + 1}`,
        value: `${i + 1}`,
      }))

      properties['family_size'] = {
        type: 'string',
        title: '4. –°–∫–æ–ª—å–∫–æ —É –≤–∞—Å —á–ª–µ–Ω–æ–≤ —Å–µ–º—å–∏?',
        'x-decorator': 'FormItem',
        'x-component': 'Select',
        'x-component-props': {
          placeholder: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ',
        },
        enum: familySizeOptions.map((o) => o.value),
        'x-enum-options': familySizeOptions,
        required: true,
        'x-meta': { factor: 'family_size' },
      }

      // –í–æ–ø—Ä–æ—Å 5: –í–æ–∑—Ä–∞—Å—Ç
      const ageOptions = [
        { label: '15-19', value: '15_19' },
        { label: '20-24', value: '20_24' },
        { label: '25-29', value: '25_29' },
        { label: '30-34', value: '30_34' },
        { label: '35-39', value: '35_39' },
        { label: '40-44', value: '40_44' },
        { label: '45-49', value: '45_49' },
        { label: '50-54', value: '50_54' },
        { label: '55-59', value: '55_59' },
        { label: '60-64', value: '60_64' },
        { label: '65-69', value: '65_69' },
        { label: '70-74', value: '70_74' },
        { label: '75-79', value: '75_79' },
        { label: '80+', value: '80_plus' },
      ]

      properties['age'] = {
        type: 'string',
        title: '5. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø—Ä–∏–º–µ—Ä–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç',
        'x-decorator': 'FormItem',
        'x-component': 'Select',
        'x-component-props': {
          placeholder: '–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç',
        },
        enum: ageOptions.map((o) => o.value),
        'x-enum-options': ageOptions,
        required: true,
        'x-meta': { factor: 'age' },
      }

      // –í–æ–ø—Ä–æ—Å 6: –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
      const educationOptions = [
        { label: '–°—Ä–µ–¥–Ω–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ', value: 'vocational' },
        { label: '–°—Ä–µ–¥–Ω–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∫–≤', value: 'vocational_skilled' },
        { label: '–°—Ä–µ–¥–Ω–µ–µ –æ–±—â–µ–µ', value: 'high_school' },
        { label: '–û—Å–Ω–æ–≤–Ω–æ–µ –æ–±—â–µ–µ', value: 'basic' },
        { label: '–ù–µ –∏–º–µ—é—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ', value: 'no_basic' },
        { label: '–í—ã—Å—à–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ', value: 'higher' },
        { label: '–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç', value: 'bachelor' },
        { label: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç', value: 'specialist' },
        { label: '–ú–∞–≥–∏—Å—Ç—Ä', value: 'master' },
      ]

      properties['education'] = {
        type: 'string',
        title: '6. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
        'x-decorator': 'FormItem',
        'x-component': 'Select',
        'x-component-props': {
          placeholder: '–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
        },
        enum: educationOptions.map((o) => o.value),
        'x-enum-options': educationOptions,
        required: true,
        'x-meta': { factor: 'education' },
      }

      // –í–æ–ø—Ä–æ—Å 7: –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ (–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä)
      const skillsOptions = [
        { label: '–ù–∞–±–æ—Ä —Ç–µ–∫—Å—Ç–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', value: 'text_editing' },
        { label: '–†–∞–±–æ—Ç–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏', value: 'spreadsheets' },
        { label: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ-, –≤–∏–¥–µ–æ-', value: 'media_editing' },
        { label: '–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π', value: 'presentations' },
        { label: '–û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã', value: 'messaging' },
        { label: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤', value: 'device_connection' },
        { label: '–ü–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–æ–≤ –º–µ–∂–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏', value: 'file_transfer' },
        { label: '–ü–æ–∏—Å–∫ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û', value: 'software_install' },
        { label: '–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π –∏ –∑–∞—â–∏—Ç–∞', value: 'security' },
        { label: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç–µ', value: 'info_verification' },
        { label: '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö', value: 'privacy' },
        { label: '–ù–∞–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è', value: 'programming' },
        { label: '–ò–Ω—ã–µ –Ω–∞–≤—ã–∫–∏', value: 'other_skills' },
      ]

      properties['professional_skills'] = {
        type: 'array',
        title: '7. –£–∫–∞–∂–∏—Ç–µ –∫–∞–∫–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏ –≤—ã –æ–±–ª–∞–¥–∞–µ—Ç–µ?',
        'x-decorator': 'FormItem',
        'x-component': 'Checkbox.Group',
        'x-component-props': {},
        enum: skillsOptions.map((o) => o.value),
        'x-enum-options': skillsOptions,
        'x-meta': { factor: 'professional_skills' },
      }

      return {
        type: 'object',
        properties,
        'x-meta': {
          testType: 'employment_scoring',
          scoringMode: 'custom',
        },
      }
    }

    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ—Å—Ç—ã —Å —Ç–∞–∫–∏–º–∏ –∂–µ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
    await supabaseAdmin.from('tests').delete().eq('title', 'ICT Index - –¢–µ—Å—Ç —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤')
    await supabaseAdmin
      .from('tests')
      .delete()
      .eq('title', 'Employment Scoring - –û—Ü–µ–Ω–∫–∞ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞')

    // –°–æ–∑–¥–∞–µ–º ICT Index Test
    const ictSchema = buildICTIndexSchema()
    const { data: ictTest, error: ictError } = await supabaseAdmin
      .from('tests')
      .insert({
        title: 'ICT Index - –¢–µ—Å—Ç —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤',
        description:
          '–û—Ü–µ–Ω–∏—Ç–µ —Å–≤–æ–∏ —Ü–∏—Ñ—Ä–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ –∏ —Å—Ä–∞–≤–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ —Å—Ä–µ–¥–Ω–∏–º –ø–æ –≤–∞—à–µ–º—É —Ä–µ–≥–∏–æ–Ω—É. –¢–µ—Å—Ç –≤–∫–ª—é—á–∞–µ—Ç 15 –Ω–∞–≤—ã–∫–æ–≤ –∏ –≤—ã–±–æ—Ä –∏–∑ 85 —Ä–µ–≥–∏–æ–Ω–æ–≤.',
        formily_schema: ictSchema,
        status: 'published',
        show_results: true,
        allow_multiple_attempts: true,
        time_limit_minutes: 10,
      })
      .select()
      .single()

    if (ictError) {
      throw new Error('ICT Index error: ' + ictError.message)
    }

    // –°–æ–∑–¥–∞–µ–º Employment Scoring Test
    const employmentSchema = buildEmploymentScoringSchema()
    const { data: employmentTest, error: employmentError } = await supabaseAdmin
      .from('tests')
      .insert({
        title: 'Employment Scoring - –û—Ü–µ–Ω–∫–∞ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞',
        description:
          '–£–∑–Ω–∞–π—Ç–µ –≤–∞—à—É –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Ü–∏–∞–ª—å–Ω–æ-–¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫. 7 –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –ø–æ–ª–µ, –≤–æ–∑—Ä–∞—Å—Ç–µ, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –∏ –Ω–∞–≤—ã–∫–∞—Ö.',
        formily_schema: employmentSchema,
        status: 'published',
        show_results: true,
        allow_multiple_attempts: true,
        time_limit_minutes: 15,
      })
      .select()
      .single()

    if (employmentError) {
      throw new Error('Employment Scoring error: ' + employmentError.message)
    }

    return NextResponse.json({
      success: true,
      data: {
        ictTest,
        employmentTest,
      },
      message: 'Formily tests created and published successfully!',
    })
  } catch (error) {
    console.error('Seed Formily tests error:', error)
    return NextResponse.json(
      { success: false, error: error instanceof Error ? error.message : 'Unknown error' },
      { status: 500 },
    )
  }
}
