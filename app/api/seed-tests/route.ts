import { NextResponse } from 'next/server'
import { supabaseAdmin } from '@/lib/supabase-server'

export async function POST() {
  try {
    // –¢–µ—Å—Ç Big5
    const big5Schema = {
      type: 'object',
      properties: {
        intro: {
          type: 'void',
          'x-component': 'FormItem',
          'x-content': 'üìä –û—Ü–µ–Ω–∏—Ç–µ –∫–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 5\n\n1 = –ê–±—Å–æ–ª—é—Ç–Ω–æ –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω | 5 = –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω'
        },
        q1: {
          type: 'number',
          title: '1. –Ø —Ä–∞–∑–≥–æ–≤–æ—Ä—á–∏–≤—ã–π —á–µ–ª–æ–≤–µ–∫',
          'x-decorator': 'FormItem',
          'x-component': 'Slider',
          'x-component-props': {
            min: 1,
            max: 5,
            step: 1,
            marks: { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5' }
          },
          required: true
        },
        q2: {
          type: 'number',
          title: '2. –Ø —Å–∫–ª–æ–Ω–µ–Ω –∫—Ä–∏—Ç–∏–∫–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏—Ö',
          'x-decorator': 'FormItem',
          'x-component': 'Slider',
          'x-component-props': {
            min: 1,
            max: 5,
            step: 1,
            marks: { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5' }
          },
          required: true
        },
        q3: {
          type: 'number',
          title: '3. –Ø –≤—ã–ø–æ–ª–Ω—è—é —Ä–∞–±–æ—Ç—É —Ç—â–∞—Ç–µ–ª—å–Ω–æ',
          'x-decorator': 'FormItem',
          'x-component': 'Slider',
          'x-component-props': {
            min: 1,
            max: 5,
            step: 1,
            marks: { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5' }
          },
          required: true
        },
        q4: {
          type: 'number',
          title: '4. –Ø —á–∞—Å—Ç–æ –Ω–µ—Ä–≤–Ω–∏—á–∞—é',
          'x-decorator': 'FormItem',
          'x-component': 'Slider',
          'x-component-props': {
            min: 1,
            max: 5,
            step: 1,
            marks: { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5' }
          },
          required: true
        },
        q5: {
          type: 'number',
          title: '5. –Ø –∏–º–µ—é –±–æ–≥–∞—Ç–æ–µ –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
          'x-decorator': 'FormItem',
          'x-component': 'Slider',
          'x-component-props': {
            min: 1,
            max: 5,
            step: 1,
            marks: { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5' }
          },
          required: true
        },
        q6: {
          type: 'number',
          title: '6. –Ø –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π',
          'x-decorator': 'FormItem',
          'x-component': 'Slider',
          'x-component-props': {
            min: 1,
            max: 5,
            step: 1,
            marks: { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5' }
          },
          required: true
        },
        q7: {
          type: 'number',
          title: '7. –Ø —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–Ω–æ—à—É—Å—å –∫ –¥—Ä—É–≥–∏–º',
          'x-decorator': 'FormItem',
          'x-component': 'Slider',
          'x-component-props': {
            min: 1,
            max: 5,
            step: 1,
            marks: { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5' }
          },
          required: true
        },
        q8: {
          type: 'number',
          title: '8. –Ø —Å–∫–ª–æ–Ω–µ–Ω –∫ –ª–µ–Ω–∏',
          'x-decorator': 'FormItem',
          'x-component': 'Slider',
          'x-component-props': {
            min: 1,
            max: 5,
            step: 1,
            marks: { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5' }
          },
          required: true
        },
        q9: {
          type: 'number',
          title: '9. –Ø –æ—Å—Ç–∞—é—Å—å —Å–ø–æ–∫–æ–π–Ω—ã–º –≤ —Å—Ç—Ä–µ—Å—Å–æ–≤—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö',
          'x-decorator': 'FormItem',
          'x-component': 'Slider',
          'x-component-props': {
            min: 1,
            max: 5,
            step: 1,
            marks: { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5' }
          },
          required: true
        },
        q10: {
          type: 'number',
          title: '10. –Ø –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Å—å –∏—Å–∫—É—Å—Å—Ç–≤–æ–º –∏ –∫—É–ª—å—Ç—É—Ä–æ–π',
          'x-decorator': 'FormItem',
          'x-component': 'Slider',
          'x-component-props': {
            min: 1,
            max: 5,
            step: 1,
            marks: { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5' }
          },
          required: true
        }
      }
    }

    const { data: big5, error: big5Error } = await supabaseAdmin
      .from('tests')
      .insert({
        title: 'Big Five - –¢–µ—Å—Ç –ª–∏—á–Ω–æ—Å—Ç–∏',
        description: '–û–ø—Ä–æ—Å–Ω–∏–∫ –ª–∏—á–Ω–æ—Å—Ç–∏ –ø–æ –º–æ–¥–µ–ª–∏ –ë–æ–ª—å—à–æ–π –ü—è—Ç–µ—Ä–∫–∏. –û—Ü–µ–Ω–∏—Ç–µ 10 —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –æ —Å–µ–±–µ –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 5.',
        formily_schema: big5Schema,
        status: 'published',
        show_results: true,
        allow_multiple_attempts: true,
        time_limit_minutes: 15
      })
      .select()
      .single()

    if (big5Error) {
      throw new Error('Big5 error: ' + big5Error.message)
    }

    // –¢–µ—Å—Ç HEXACO
    const hexacoSchema = {
      type: 'object',
      properties: {
        intro: {
          type: 'void',
          'x-component': 'FormItem',
          'x-content': '‚≠ê –û—Ü–µ–Ω–∏—Ç–µ –∫–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–≤–µ–∑–¥–æ—á–∫–∞–º–∏ –æ—Ç 1 –¥–æ 5\n\n1 –∑–≤–µ–∑–¥–∞ = –°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω | 5 –∑–≤–µ–∑–¥ = –°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Å–æ–≥–ª–∞—Å–µ–Ω'
        },
        h1: {
          type: 'number',
          title: '1. –Ø –±—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤–∑—è–ª –≤–∑—è—Ç–∫—É, –¥–∞–∂–µ –µ—Å–ª–∏ –±—ã –±—ã–ª–∞ –±–æ–ª—å—à–∞—è —Å—É–º–º–∞',
          'x-decorator': 'FormItem',
          'x-component': 'Rate',
          'x-component-props': { count: 5 },
          required: true
        },
        h2: {
          type: 'number',
          title: '2. –Ø –±–æ—é—Å—å —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏ –±–æ–ª—å–Ω—ã–º',
          'x-decorator': 'FormItem',
          'x-component': 'Rate',
          'x-component-props': { count: 5 },
          required: true
        },
        h3: {
          type: 'number',
          title: '3. –Ø —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–æ–±—Ä–∞–Ω–∏—è—Ö',
          'x-decorator': 'FormItem',
          'x-component': 'Rate',
          'x-component-props': { count: 5 },
          required: true
        },
        h4: {
          type: 'number',
          title: '4. –Ø –±—ã—Å—Ç—Ä–æ –ø—Ä–æ—â–∞—é –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—è –æ–±–∏–¥–µ–ª–∏',
          'x-decorator': 'FormItem',
          'x-component': 'Rate',
          'x-component-props': { count: 5 },
          required: true
        },
        h5: {
          type: 'number',
          title: '5. –Ø –ø–ª–∞–Ω–∏—Ä—É—é –∏ –æ—Ä–≥–∞–Ω–∏–∑—É—é –¥–µ–ª–∞ –∑–∞—Ä–∞–Ω–µ–µ',
          'x-decorator': 'FormItem',
          'x-component': 'Rate',
          'x-component-props': { count: 5 },
          required: true
        },
        h6: {
          type: 'number',
          title: '6. –ú–µ–Ω—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∏–∑—É—á–µ–Ω–∏–µ –ø—Ä–∏—Ä–æ–¥—ã –≤—Å–µ–ª–µ–Ω–Ω–æ–π',
          'x-decorator': 'FormItem',
          'x-component': 'Rate',
          'x-component-props': { count: 5 },
          required: true
        },
        h7: {
          type: 'number',
          title: '7. –Ø –Ω–µ —Ö–æ—á—É, —á—Ç–æ–±—ã –º–µ–Ω—è –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–ª–∏ –∫–∞–∫ –≤–∞–∂–Ω—É—é –ø–µ—Ä—Å–æ–Ω—É',
          'x-decorator': 'FormItem',
          'x-component': 'Rate',
          'x-component-props': { count: 5 },
          required: true
        },
        h8: {
          type: 'number',
          title: '8. –Ø –ø–ª–∞—á—É, –∫–æ–≥–¥–∞ —Å–º–æ—Ç—Ä—é –≥—Ä—É—Å—Ç–Ω—ã–µ —Ñ–∏–ª—å–º—ã',
          'x-decorator': 'FormItem',
          'x-component': 'Rate',
          'x-component-props': { count: 5 },
          required: true
        },
        h9: {
          type: 'number',
          title: '9. –Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é —Ä–∞–±–æ—Ç—É, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–µ–±—É–µ—Ç –æ–±—â–µ–Ω–∏—è —Å –ª—é–¥—å–º–∏',
          'x-decorator': 'FormItem',
          'x-component': 'Rate',
          'x-component-props': { count: 5 },
          required: true
        },
        h10: {
          type: 'number',
          title: '10. –Ø —Ä–µ–¥–∫–æ –∑–ª—é—Å—å –¥–∞–∂–µ –Ω–∞ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–ª–æ—Ö–æ —Å–æ –º–Ω–æ–π –æ–±—Ä–∞—â–∞—é—Ç—Å—è',
          'x-decorator': 'FormItem',
          'x-component': 'Rate',
          'x-component-props': { count: 5 },
          required: true
        },
        h11: {
          type: 'number',
          title: '11. –Ø —Å—Ç–∞—Ä–∞—é—Å—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏ –Ω–∞ 100%',
          'x-decorator': 'FormItem',
          'x-component': 'Rate',
          'x-component-props': { count: 5 },
          required: true
        },
        h12: {
          type: 'number',
          title: '12. –Ø –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Å—å —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–º–∏ –¥–∏—Å–∫—É—Å—Å–∏—è–º–∏',
          'x-decorator': 'FormItem',
          'x-component': 'Rate',
          'x-component-props': { count: 5 },
          required: true
        }
      }
    }

    const { data: hexaco, error: hexacoError } = await supabaseAdmin
      .from('tests')
      .insert({
        title: 'HEXACO - –õ–∏—á–Ω–æ—Å—Ç–Ω—ã–π –æ–ø—Ä–æ—Å–Ω–∏–∫',
        description: '–û–ø—Ä–æ—Å–Ω–∏–∫ HEXACO –∏–∑–º–µ—Ä—è–µ—Ç 6 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤ –ª–∏—á–Ω–æ—Å—Ç–∏. –û—Ü–µ–Ω–∏—Ç–µ 12 —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –∑–≤–µ–∑–¥–æ—á–∫–∞–º–∏ –æ—Ç 1 –¥–æ 5.',
        formily_schema: hexacoSchema,
        status: 'published',
        show_results: true,
        allow_multiple_attempts: true,
        time_limit_minutes: 20
      })
      .select()
      .single()

    if (hexacoError) {
      throw new Error('HEXACO error: ' + hexacoError.message)
    }

    return NextResponse.json({
      success: true,
      data: {
        big5,
        hexaco
      },
      message: 'Tests created and published successfully!'
    })
  } catch (error) {
    console.error('Seed tests error:', error)
    return NextResponse.json(
      { success: false, error: error instanceof Error ? error.message : 'Unknown error' },
      { status: 500 }
    )
  }
}
