'use client'

import { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'
import { useAuth } from '@/components/auth-provider'
import { Button } from '@/components/ui/button'
import { Card, CardContent } from '@/components/ui/card'
import { Progress } from '@/components/ui/progress'
import { ArrowRight, ArrowLeft, CheckCircle, User, Brain, BarChart3, Share2 } from 'lucide-react'

type OnboardingStep = {
  id: string
  title: string
  description: string
  icon: any
  content: JSX.Element
}

const DEFAULT_STEP: OnboardingStep = {
  id: 'default',
  title: '',
  description: '',
  icon: User,
  content: <div />,
}

const onboardingSteps: OnboardingStep[] = [
  {
    id: 'welcome',
    title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Evolv! üöÄ',
    description: '–û—Ç–∫—Ä–æ–π—Ç–µ —Å–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Å –ø–æ–º–æ—â—å—é AI-–∞–Ω–∞–ª–∏–∑–∞ –ª–∏—á–Ω–æ—Å—Ç–∏',
    icon: User,
    content: (
      <div className="text-center space-y-4">
        <div className="text-6xl">üéØ</div>
        <p className="text-lg text-muted-foreground">
          Evolv –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–Ω—è—Ç—å —Å–µ–±—è –ª—É—á—à–µ –∏ –Ω–∞–π—Ç–∏ –ø—É—Ç—å –∫ –∫–∞—Ä—å–µ—Ä–Ω–æ–º—É —Ä–æ—Å—Ç—É
        </p>
        <div className="bg-gradient-to-r from-blue-500/10 to-purple-500/10 p-4 rounded-lg">
          <p className="text-sm">
            ‚ú® –ù–∞—É—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ Big Five –∏ –∞—Ä—Ö–µ—Ç–∏–ø–æ–≤ –Æ–Ω–≥–∞
            <br />
            üé® –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π
            <br />
            üìä –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è
          </p>
        </div>
      </div>
    ),
  },
  {
    id: 'profile',
    title: '–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å',
    description: '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
    icon: User,
    content: (
      <div className="space-y-4">
        <div className="text-center text-4xl">üë§</div>
        <p className="text-center text-muted-foreground">
          –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –¥–∞—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        </p>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div className="bg-gradient-to-br from-blue-500/10 to-blue-600/10 p-4 rounded-lg">
            <h4 className="font-semibold mb-2">–ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
            <p className="text-sm text-muted-foreground">–ò–º—è, –≤–æ–∑—Ä–∞—Å—Ç, —Ç–µ–∫—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è</p>
          </div>
          <div className="bg-gradient-to-br from-purple-500/10 to-purple-600/10 p-4 rounded-lg">
            <h4 className="font-semibold mb-2">–ö–∞—Ä—å–µ—Ä–Ω—ã–µ —Ü–µ–ª–∏</h4>
            <p className="text-sm text-muted-foreground">–ö—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è</p>
          </div>
        </div>
      </div>
    ),
  },
  {
    id: 'test',
            title: '–ü—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Å—Ç –ª–∏—á–Ω–æ—Å—Ç–∏',
    description: '100 –Ω–∞—É—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ª–∏—á–Ω–æ—Å—Ç–∏',
    icon: Brain,
    content: (
      <div className="space-y-4">
        <div className="text-center text-4xl">üß†</div>
        <p className="text-center text-muted-foreground">
          –ù–∞—à —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–∏–∫–∞—Ö
        </p>
        <div className="space-y-3">
          <div className="flex items-center gap-3 p-3 bg-gradient-to-r from-blue-500/10 to-blue-600/10 rounded-lg">
            <CheckCircle className="h-5 w-5 text-blue-500" />
            <span>Big Five: –æ—Å–Ω–æ–≤–Ω—ã–µ —á–µ—Ä—Ç—ã –ª–∏—á–Ω–æ—Å—Ç–∏</span>
          </div>
          <div className="flex items-center gap-3 p-3 bg-gradient-to-r from-purple-500/10 to-purple-600/10 rounded-lg">
            <CheckCircle className="h-5 w-5 text-purple-500" />
            <span>–ê—Ä—Ö–µ—Ç–∏–ø—ã –Æ–Ω–≥–∞: –≥–ª—É–±–∏–Ω–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è</span>
          </div>
          <div className="flex items-center gap-3 p-3 bg-gradient-to-r from-pink-500/10 to-pink-600/10 rounded-lg">
            <CheckCircle className="h-5 w-5 text-pink-500" />
            <span>–ö–∞—Ä—å–µ—Ä–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è</span>
          </div>
        </div>
        <p className="text-sm text-center text-muted-foreground">‚è±Ô∏è –¢–µ—Å—Ç –∑–∞–π–º–µ—Ç 15-20 –º–∏–Ω—É—Ç</p>
      </div>
    ),
  },
  {
    id: 'results',
    title: '–ü–æ–ª—É—á–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑',
    description: 'AI —Å–æ–∑–¥–∞—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏',
    icon: BarChart3,
    content: (
      <div className="space-y-4">
        <div className="text-center text-4xl">üìä</div>
        <p className="text-center text-muted-foreground">–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –±—É–¥–µ—Ç –≤–∫–ª—é—á–∞—Ç—å:</p>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div className="space-y-2">
            <div className="bg-gradient-to-br from-blue-500/10 to-blue-600/10 p-3 rounded-lg">
              <h4 className="font-semibold text-sm">–ü—Ä–æ—Ñ–∏–ª—å –ª–∏—á–Ω–æ—Å—Ç–∏</h4>
              <p className="text-xs text-muted-foreground">–í–∞—à–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã</p>
            </div>
            <div className="bg-gradient-to-br from-purple-500/10 to-purple-600/10 p-3 rounded-lg">
              <h4 className="font-semibold text-sm">–ö–∞—Ä—å–µ—Ä–Ω—ã–µ —Ä–æ–ª–∏</h4>
              <p className="text-xs text-muted-foreground">–ü–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏</p>
            </div>
          </div>
          <div className="space-y-2">
            <div className="bg-gradient-to-br from-pink-500/10 to-pink-600/10 p-3 rounded-lg">
              <h4 className="font-semibold text-sm">–ó–æ–Ω—ã —Ä–æ—Å—Ç–∞</h4>
              <p className="text-xs text-muted-foreground">–ß—Ç–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å</p>
            </div>
            <div className="bg-gradient-to-br from-indigo-500/10 to-indigo-600/10 p-3 rounded-lg">
              <h4 className="font-semibold text-sm">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h4>
              <p className="text-xs text-muted-foreground">–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏</p>
            </div>
          </div>
        </div>
      </div>
    ),
  },
  {
    id: 'share',
    title: '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏',
    description: '–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –æ—Ç—á–µ—Ç –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö',
    icon: Share2,
    content: (
      <div className="space-y-4">
        <div className="text-center text-4xl">üöÄ</div>
        <p className="text-center text-muted-foreground">
          –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞
        </p>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
          <div className="bg-gradient-to-br from-blue-500/10 to-blue-600/10 p-3 rounded-lg text-center">
            <div className="text-2xl mb-2">üìÑ</div>
            <h4 className="font-semibold text-sm">PDF –æ—Ç—á–µ—Ç</h4>
            <p className="text-xs text-muted-foreground">–î–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π</p>
          </div>
          <div className="bg-gradient-to-br from-purple-500/10 to-purple-600/10 p-3 rounded-lg text-center">
            <div className="text-2xl mb-2">üíº</div>
            <h4 className="font-semibold text-sm">LinkedIn</h4>
            <p className="text-xs text-muted-foreground">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–µ—Ç—å</p>
          </div>
          <div className="bg-gradient-to-br from-pink-500/10 to-pink-600/10 p-3 rounded-lg text-center">
            <div className="text-2xl mb-2">üë•</div>
            <h4 className="font-semibold text-sm">–ö–æ–º–∞–Ω–¥–∞</h4>
            <p className="text-xs text-muted-foreground">–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –∫–æ–ª–ª–µ–≥–∞–º–∏</p>
          </div>
        </div>
        <div className="bg-gradient-to-r from-green-500/10 to-green-600/10 p-4 rounded-lg text-center">
          <p className="text-sm font-medium">üéØ –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ?</p>
        </div>
      </div>
    ),
  },
]

export default function OnboardingPage() {
  const [currentStep, setCurrentStep] = useState(0)
  const { user } = useAuth()
  const router = useRouter()

  // Redirect if not authenticated
  useEffect(() => {
    if (!user) {
      router.push('/auth/user')
    }
  }, [user, router])

  const progress = ((currentStep + 1) / onboardingSteps.length) * 100

  const handleNext = () => {
    if (currentStep < onboardingSteps.length - 1) {
      setCurrentStep(currentStep + 1)
    } else {
      handleComplete()
    }
  }

  const handlePrevious = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1)
    }
  }

  const handleComplete = () => {
    if (typeof window !== 'undefined') {
      localStorage.setItem('onboarding_completed', 'true')
    }
    router.push('/dashboard')
  }

  const handleSkip = () => {
    router.push('/dashboard')
  }

  if (!user) {
    return null
  }

  const step: OnboardingStep = onboardingSteps[currentStep] ?? DEFAULT_STEP
  const Icon = step?.icon as any

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 dark:from-slate-900 dark:via-slate-800 dark:to-slate-900">
      {/* Header */}
      <div className="container mx-auto px-4 pt-8">
        <div className="flex items-center justify-between mb-8">
          <div className="flex items-center gap-3">
            <div className="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
              Evolv
            </div>
            <div className="text-sm text-muted-foreground">
              –®–∞–≥ {currentStep + 1} –∏–∑ {onboardingSteps.length}
            </div>
          </div>
          <Button variant="ghost" onClick={handleSkip}>
            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
          </Button>
        </div>

        {/* Progress */}
        <div className="mb-8">
          <Progress value={progress} className="h-2" />
        </div>

        {/* Main Content */}
        <div className="max-w-2xl mx-auto">
          <Card className="bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm border-0 shadow-xl">
            <CardContent className="p-8">
              {/* Step Header */}
              <div className="text-center mb-8">
                <div className="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full mb-4">
                  <Icon className="h-8 w-8 text-white" />
                </div>
                <h1 className="text-2xl font-bold mb-2">{step.title}</h1>
                <p className="text-muted-foreground">{step.description}</p>
              </div>

              {/* Step Content */}
              <div className="mb-8">{step.content}</div>

              {/* Navigation */}
              <div className="flex items-center justify-between">
                <Button
                  variant="ghost"
                  onClick={handlePrevious}
                  disabled={currentStep === 0}
                  className="flex items-center gap-2"
                >
                  <ArrowLeft className="h-4 w-4" />
                  –ù–∞–∑–∞–¥
                </Button>

                <div className="flex gap-2">
                  {onboardingSteps.map((_, index) => (
                    <div
                      key={index}
                      className={`w-2 h-2 rounded-full transition-colors ${
                        index <= currentStep
                          ? 'bg-gradient-to-r from-blue-500 to-purple-500'
                          : 'bg-muted'
                      }`}
                    />
                  ))}
                </div>

                <Button
                  onClick={handleNext}
                  className="flex items-center gap-2 bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600"
                >
                  {currentStep === onboardingSteps.length - 1 ? '–ù–∞—á–∞—Ç—å!' : '–î–∞–ª–µ–µ'}
                  <ArrowRight className="h-4 w-4" />
                </Button>
              </div>
            </CardContent>
          </Card>

          {/* Quick Actions for specific steps */}
          {currentStep === 1 && (
            <div className="mt-6 text-center">
              <Button variant="outline" onClick={() => router.push('/profile')} className="mx-2">
                –ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —Å–µ–π—á–∞—Å
              </Button>
            </div>
          )}

          {currentStep === 2 && (
            <div className="mt-6 text-center">
              <Button
                variant="outline"
                onClick={() => router.push('/ai-assistant')}
                className="mx-2"
              >
                –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç —Å–µ–π—á–∞—Å
              </Button>
            </div>
          )}
        </div>
      </div>
    </div>
  )
}
